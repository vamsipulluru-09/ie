#include <DHT.h>
// Define the DHT sensor pin and type

#define DHTPIN 13       // Pin connected to the DHT11 data pin
#define DHTTYPE DHT11   // DHT11 sensor type

DHT dht(DHTPIN, DHTTYPE); // Create a DHT object

void setup() {
  Serial.begin(9600);  // Initialize serial communication
  dht.begin();         // Initialize the DHT11 sensor
}

void loop() {
  // Wait a moment between readings
  delay(2000);

  // Read temperature and humidity
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();

  // Check if the readings are valid
  if (isnan(humidity) || isnan(temperature)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  // Print temperature and humidity values to the Serial Monitor
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.print("%  Temperature: ");
  Serial.print(temperature);
  Serial.println("Â°C");
}



char data;           // Variable to store received data
const int ledPin = 12; // Pin connected to the LED

void setup() {
  Serial.begin(9600);       // Initialize serial communication
  pinMode(ledPin, OUTPUT);  // Set LED pin as output
  digitalWrite(ledPin, LOW); // Turn off LED initially
}

void loop() {
  if (Serial.available() > 0) { // Check if data is received
    data = Serial.read();       // Read the incoming data
    if (data == '1') {
      digitalWrite(ledPin, HIGH); // Turn LED on
    } else if (data == '0') {
      digitalWrite(ledPin, LOW);  // Turn LED off
    }
    Serial.print("Received: "); // Debug: Print received data
    Serial.println(data);
  }
}




const int pirPin = 12;  // Pin connected to the PIR sensor output

void setup() {
  Serial.begin(9600);       // Initialize serial communication
  pinMode(pirPin, INPUT);   // Set PIR sensor pin as input
}

void loop() {
  int motionDetected = digitalRead(pirPin); // Read the PIR sensor state

  if (motionDetected == HIGH) { // If motion is detected
    Serial.println("Motion detected!");
  } else {
    Serial.println("No motion.");
  }

  delay(500); // Delay for stability
}



char data;           // Variable to store received data
const int ledPin = 12; // Pin connected to the LED

void setup() {
  Serial.begin(9600);       // Initialize serial communication
  pinMode(ledPin, OUTPUT);  // Set LED pin as output
  digitalWrite(ledPin, LOW); // Turn off LED initially
}

void loop() {
  if (Serial.available() > 0) { // Check if data is received
    data = Serial.read();       // Read the incoming data
    if (data == '1') {
      digitalWrite(ledPin, HIGH); // Turn LED on
    } else if (data == '0') {
      digitalWrite(ledPin, LOW);  // Turn LED off
    }
    Serial.print("Received: "); // Debug: Print received data
    Serial.println(data);
  }
}
